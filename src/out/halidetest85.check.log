Evaluating producer.store_root().compute_at(consumer, x)
--- root --- producer_root_x --- alloc buffer  ((0,0),(6,6)) size (2,2)
--- x --- producer_root_x --- fill buffer ((0,0),(2,2))
producer_root_x 0,0
producer_root_x 1,0
producer_root_x 0,1
producer_root_x 1,1
consumer_root_x 0,0
--- x --- producer_root_x --- fill buffer ((2,0),(3,2)) !
producer_root_x 2,0
producer_root_x 2,1
consumer_root_x 1,0
--- x --- producer_root_x --- fill buffer ((3,0),(4,2)) !
producer_root_x 3,0
producer_root_x 3,1
consumer_root_x 2,0
--- x --- producer_root_x --- fill buffer ((4,0),(5,2)) !
producer_root_x 4,0
producer_root_x 4,1
consumer_root_x 3,0
--- x --- producer_root_x --- fill buffer ((0,1),(2,3))
producer_root_x 0,1
producer_root_x 1,1
producer_root_x 0,2
producer_root_x 1,2
consumer_root_x 0,1
--- x --- producer_root_x --- fill buffer ((2,2),(3,3)) !!
producer_root_x 2,2
consumer_root_x 1,1
--- x --- producer_root_x --- fill buffer ((3,2),(4,3)) !!
producer_root_x 3,2
consumer_root_x 2,1
--- x --- producer_root_x --- fill buffer ((4,2),(5,3)) !!
producer_root_x 4,2
consumer_root_x 3,1
--- x --- producer_root_x --- fill buffer ((0,2),(2,4))
producer_root_x 0,2
producer_root_x 1,2
producer_root_x 0,3
producer_root_x 1,3
consumer_root_x 0,2
--- x --- producer_root_x --- fill buffer ((2,3),(3,4)) !!
producer_root_x 2,3
consumer_root_x 1,2
--- x --- producer_root_x --- fill buffer ((3,3),(4,4)) !!
producer_root_x 3,3
consumer_root_x 2,2
--- x --- producer_root_x --- fill buffer ((4,3),(5,4)) !!
producer_root_x 4,3
consumer_root_x 3,2
--- x --- producer_root_x --- fill buffer ((0,3),(2,5))
producer_root_x 0,3
producer_root_x 1,3
producer_root_x 0,4
producer_root_x 1,4
consumer_root_x 0,3
--- x --- producer_root_x --- fill buffer ((2,4),(3,5)) !!
producer_root_x 2,4
consumer_root_x 1,3
--- x --- producer_root_x --- fill buffer ((3,4),(4,5)) !!
producer_root_x 3,4
consumer_root_x 2,3
--- x --- producer_root_x --- fill buffer ((4,4),(5,5)) !!
producer_root_x 4,4
consumer_root_x 3,3
Pseudo-code for the schedule:
stages: (Func(producer_root_x),(0,1),(0,1)), (Func(consumer_root_x),(0,0),(0,0))
for y:
for x:
producer_root_x(...) = ...
for y:
for x:
sub (Func(producer_root_x),(0,1),(0,1)) {
  stages: (Func(producer_root_x),(0,0),(0,0))
  for y:
  for x:
  producer_root_x(...) = ...
}
consumer_root_x(...) = ...
