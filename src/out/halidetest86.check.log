Evaluating:
consumer.tile(x, y, x_outer, y_outer, x_inner, y_inner, 4, 4);
producer.compute_at(consumer, x_outer);
--- x_outer --- producer_tile --- alloc+fill buffer  ((0,0),(5,5))
producer_tile 0,0
producer_tile 1,0
producer_tile 2,0
producer_tile 3,0
producer_tile 4,0
producer_tile 0,1
producer_tile 1,1
producer_tile 2,1
producer_tile 3,1
producer_tile 4,1
producer_tile 0,2
producer_tile 1,2
producer_tile 2,2
producer_tile 3,2
producer_tile 4,2
producer_tile 0,3
producer_tile 1,3
producer_tile 2,3
producer_tile 3,3
producer_tile 4,3
producer_tile 0,4
producer_tile 1,4
producer_tile 2,4
producer_tile 3,4
producer_tile 4,4
consumer_tile 0,0
consumer_tile 1,0
consumer_tile 2,0
consumer_tile 3,0
consumer_tile 0,1
consumer_tile 1,1
consumer_tile 2,1
consumer_tile 3,1
consumer_tile 0,2
consumer_tile 1,2
consumer_tile 2,2
consumer_tile 3,2
consumer_tile 0,3
consumer_tile 1,3
consumer_tile 2,3
consumer_tile 3,3
--- x_outer --- producer_tile --- alloc+fill buffer  ((4,0),(9,5))
producer_tile 4,0
producer_tile 5,0
producer_tile 6,0
producer_tile 7,0
producer_tile 8,0
producer_tile 4,1
producer_tile 5,1
producer_tile 6,1
producer_tile 7,1
producer_tile 8,1
producer_tile 4,2
producer_tile 5,2
producer_tile 6,2
producer_tile 7,2
producer_tile 8,2
producer_tile 4,3
producer_tile 5,3
producer_tile 6,3
producer_tile 7,3
producer_tile 8,3
producer_tile 4,4
producer_tile 5,4
producer_tile 6,4
producer_tile 7,4
producer_tile 8,4
consumer_tile 4,0
consumer_tile 5,0
consumer_tile 6,0
consumer_tile 7,0
consumer_tile 4,1
consumer_tile 5,1
consumer_tile 6,1
consumer_tile 7,1
consumer_tile 4,2
consumer_tile 5,2
consumer_tile 6,2
consumer_tile 7,2
consumer_tile 4,3
consumer_tile 5,3
consumer_tile 6,3
consumer_tile 7,3
--- x_outer --- producer_tile --- alloc+fill buffer  ((0,4),(5,9))
producer_tile 0,4
producer_tile 1,4
producer_tile 2,4
producer_tile 3,4
producer_tile 4,4
producer_tile 0,5
producer_tile 1,5
producer_tile 2,5
producer_tile 3,5
producer_tile 4,5
producer_tile 0,6
producer_tile 1,6
producer_tile 2,6
producer_tile 3,6
producer_tile 4,6
producer_tile 0,7
producer_tile 1,7
producer_tile 2,7
producer_tile 3,7
producer_tile 4,7
producer_tile 0,8
producer_tile 1,8
producer_tile 2,8
producer_tile 3,8
producer_tile 4,8
consumer_tile 0,4
consumer_tile 1,4
consumer_tile 2,4
consumer_tile 3,4
consumer_tile 0,5
consumer_tile 1,5
consumer_tile 2,5
consumer_tile 3,5
consumer_tile 0,6
consumer_tile 1,6
consumer_tile 2,6
consumer_tile 3,6
consumer_tile 0,7
consumer_tile 1,7
consumer_tile 2,7
consumer_tile 3,7
--- x_outer --- producer_tile --- alloc+fill buffer  ((4,4),(9,9))
producer_tile 4,4
producer_tile 5,4
producer_tile 6,4
producer_tile 7,4
producer_tile 8,4
producer_tile 4,5
producer_tile 5,5
producer_tile 6,5
producer_tile 7,5
producer_tile 8,5
producer_tile 4,6
producer_tile 5,6
producer_tile 6,6
producer_tile 7,6
producer_tile 8,6
producer_tile 4,7
producer_tile 5,7
producer_tile 6,7
producer_tile 7,7
producer_tile 8,7
producer_tile 4,8
producer_tile 5,8
producer_tile 6,8
producer_tile 7,8
producer_tile 8,8
consumer_tile 4,4
consumer_tile 5,4
consumer_tile 6,4
consumer_tile 7,4
consumer_tile 4,5
consumer_tile 5,5
consumer_tile 6,5
consumer_tile 7,5
consumer_tile 4,6
consumer_tile 5,6
consumer_tile 6,6
consumer_tile 7,6
consumer_tile 4,7
consumer_tile 5,7
consumer_tile 6,7
consumer_tile 7,7
Pseudo-code for the schedule:
stages: (Func(consumer_tile),(0,0),(0,0))
val max_x_outer = ...
val max_x_inner = ...
val max_y_outer = ...
val max_y_inner = ...
for y_outer:
for x_outer:
sub (Func(producer_tile),(0,1),(0,1)) {
  stages: (Func(producer_tile),(0,0),(0,0))
  for y:
  for x:
  producer_tile(...) = ...
}
for y_inner:
for x_inner:
val y = ...
val x = ...
consumer_tile(...) = ...
